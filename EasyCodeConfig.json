{
  "author" : "lhc",
  "version" : "1.2.4",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "hcframe",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : {
    "Default" : {
      "name" : "Default",
      "elementList" : [ {
        "matchType" : "REGEX",
        "columnType" : "varchar(\\(\\d+\\))?",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "char(\\(\\d+\\))?",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "(tiny|medium|long)*text",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "decimal(\\(\\d+,\\d+\\))?",
        "javaType" : "java.lang.Double"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "integer",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "REGEX",
        "columnType" : "(tiny|small|medium)*int(\\(\\d+\\))?",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int4",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int8",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "REGEX",
        "columnType" : "bigint(\\(\\d+\\))?",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "date",
        "javaType" : "java.util.Date"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "datetime",
        "javaType" : "java.util.Date"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "timestamp",
        "javaType" : "java.util.Date"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "time",
        "javaType" : "java.time.LocalTime"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "boolean",
        "javaType" : "java.lang.Boolean"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "bigint(20) unsigned",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "REGEX",
        "columnType" : "double(\\(\\d+,\\d+\\))?",
        "javaType" : "java.lang.Double"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "json",
        "javaType" : "java.lang.String"
      } ]
    }
  },
  "template" : {
    "hcframe" : {
      "name" : "hcframe",
      "elementList" : [ {
        "name" : "controller.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Controller\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/controller\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;\n\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport com.github.pagehelper.PageInfo;\nimport com.taixingyiji.base.common.ResultVO;\nimport com.taixingyiji.base.common.WebPageInfo;\nimport com.taixingyiji.base.module.log.annotation.LogAnno;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.apache.shiro.authz.annotation.Logical;\nimport org.apache.shiro.authz.annotation.RequiresPermissions;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\nimport java.util.Map;\n\n\n /**\n * @author $!author\n * @version 1.0\n * @className $!{tableName}\n * @date $!time.currTime()\n * @description $!{tableInfo.comment}($!{tableInfo.name})表控制层\n */\n@Api(tags = \"$!{tableName}操作\")\n@RestController\n@RequestMapping(\"$!tool.firstLowerCase($tableInfo.name)\")\npublic class $!{tableName} {\n\n    final $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;\n\n    public $!{tableName}($!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service) {\n        this.$!tool.firstLowerCase($tableInfo.name)Service = $!tool.firstLowerCase($tableInfo.name)Service;\n    }\n    \n    @PostMapping()\n    @LogAnno(operateType = \"新增$tableInfo.name\", moduleName = \"新增$tableInfo.name\")\n    @ApiOperation(value = \"新增$tableInfo.name\", notes = \"传key-value对象模式即可\")\n    @RequiresPermissions(value = {\"$tableInfo.name:add\"})\n    public ResultVO<Map<String, Object>> add(@RequestParam Map<String, Object> data) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.add(data);\n    }\n\n    @PutMapping(\"/{version}\")\n    @LogAnno(operateType = \"更新$tableInfo.name\", moduleName = \"更新$tableInfo.name\")\n    @ApiOperation(value = \"更新$tableInfo.name\")\n    @RequiresPermissions(value = {\"$tableInfo.name:edit\"})\n    public ResultVO<Map<String, Object>> update(@RequestParam Map<String, Object> data, @PathVariable Integer version) {\n        data.remove(\"id\");\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.update(data, version);\n    }\n\n    @PutMapping(\"/many/{ids}\")\n    @LogAnno(operateType = \"批量更新$tableInfo.name\", moduleName = \"批量更新$tableInfo.name\")\n    @ApiOperation(value = \"批量更新$tableInfo.name\")\n    @RequiresPermissions(value = {\"$tableInfo.name:edit:batch\"})\n    public ResultVO<Integer> updateMany(@RequestParam Map<String, Object> data, @PathVariable String ids) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.updateMany(data, ids);\n    }\n\n    @DeleteMapping(\"/{ids}\")\n    @LogAnno(operateType = \"删除$tableInfo.name\", moduleName = \"删除$tableInfo.name\")\n    @ApiOperation(value = \"删除$tableInfo.name\")\n    @RequiresPermissions(value = {\"$tableInfo.name:delete\"})\n    public ResultVO<Integer> delete(@PathVariable String ids) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.delete(ids);\n    }\n    \n     @DeleteMapping(\"one/{id}\")\n     @LogAnno(operateType = \"删除单条$tableInfo.name\", moduleName = \"删除单条$tableInfo.name\")\n     @ApiOperation(value = \"删除单条$tableInfo.name\")\n     @RequiresPermissions(value = {\"$tableInfo.name:delete:one\"})\n     public ResultVO<Map<String, Object>> deleteOne(@PathVariable String id) {\n         return $!{tool.firstLowerCase($tableInfo.name)}Service.deleteOne(id);\n     }\n\n    @GetMapping()\n    @ApiOperation(value = \"获取$tableInfo.name列表\")\n    @RequiresPermissions(value = {\"$tableInfo.name\", \"$tableInfo.name:list\"}, logical = Logical.OR)\n    public ResultVO<PageInfo<Map<String, Object>>> getList(String data, WebPageInfo webPageInfo) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.getList(data, webPageInfo);\n    }\n\n    @GetMapping(\"one/{id}\")\n    @ApiOperation(value = \"获取单条$tableInfo.name\")\n    @RequiresPermissions(value = {\"$tableInfo.name:one\"})\n    public ResultVO<Map<String, Object>> getOne(@PathVariable String id) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.getOne(id);\n    }\n\n    @GetMapping(\"many/{ids}\")\n    @ApiOperation(value = \"获取多条$tableInfo.name\")\n    @RequiresPermissions(value = {\"$tableInfo.name\", \"$tableInfo.name:many\"}, logical = Logical.OR)\n    public ResultVO<List<Map<String, Object>>> getMany(@PathVariable String ids) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.getMany(ids);\n    }\n\n    @GetMapping(\"reference\")\n    @ApiOperation(value = \"获取$tableInfo.name关联列表\")\n    @RequiresPermissions(value = {\"$tableInfo.name\", \"$tableInfo.name:reference\"}, logical = Logical.OR)\n    public ResultVO<PageInfo<Map<String, Object>>> getReference(String data, WebPageInfo webPageInfo, String target, String id) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.getReference(data, webPageInfo, target, id);\n    }\n}\n"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"ServiceImpl\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service/impl\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;\n\nimport com.github.pagehelper.PageInfo;\nimport com.taixingyiji.base.common.ResultVO;\nimport com.taixingyiji.base.common.WebPageInfo;\nimport com.taixingyiji.base.module.data.module.BaseMapper;\nimport com.taixingyiji.base.module.data.service.TableService;\nimport com.taixingyiji.base.module.tableconfig.entity.OsSysTable;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport org.springframework.stereotype.Service;\nimport com.taixingyiji.base.common.ServiceException;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * @author $!author\n * @version 1.0\n * @className $!{tableName}\n * @date $!time.currTime()\n * @description $!{tableInfo.comment}($!{tableInfo.name})表服务实现类\n */\n@Service\npublic class $!{tableName} implements $!{tableInfo.name}Service {\n\n    public static final String TABLE_NAME = \"$tool.hump2Underline($tableInfo.name)\".toUpperCase();\n    public static final String PK = \"$tool.hump2Underline($pk.name)\".toUpperCase();\n    public static final OsSysTable TABLE_INFO = OsSysTable.builder().tablePk(PK).tableName(TABLE_NAME).build();\n\n    final TableService tableService;\n\n    final BaseMapper baseMapper;\n\n    public $!{tableName}(TableService tableService, BaseMapper baseMapper) {\n        this.tableService = tableService;\n        this.baseMapper = baseMapper;\n    }\n    \n    @Override\n    public ResultVO<Map<String, Object>> add(Map<String, Object> data) {\n        return tableService.saveWithDate(TABLE_INFO, data);\n    }\n\n    @Override\n    public ResultVO<Map<String, Object>> update(Map<String, Object> data, Integer version) {\n        return tableService.updateWithDate(TABLE_INFO, data, version);\n    }\n\n    @Override\n    public ResultVO<Integer> updateMany(Map<String, Object> data, String ids) {\n        data.put(PK, ids);\n        return tableService.updateBatchWithDate(TABLE_INFO, data);\n    }\n\n    @Override\n    public ResultVO<Integer> delete(String ids) {\n        return tableService.logicDelete(TABLE_INFO, ids);\n    }\n\n    @Override\n    public ResultVO<PageInfo<Map<String, Object>>> getList(String data, WebPageInfo webPageInfo) {\n        return ResultVO.getSuccess(tableService.searchSingleTables(data, TABLE_INFO, webPageInfo));\n    }\n\n    @Override\n    public ResultVO<Map<String, Object>> getOne(String id) {\n        return ResultVO.getSuccess(tableService.getOne(TABLE_INFO, id));\n    }\n\n    @Override\n    public ResultVO<List<Map<String, Object>>> getMany(String ids) {\n        return ResultVO.getSuccess(tableService.getMany(TABLE_INFO, ids));\n    }\n\n    @Override\n    public ResultVO<PageInfo<Map<String, Object>>> getReference(String data, WebPageInfo webPageInfo, String target, String id) {\n        return ResultVO.getSuccess(tableService.getReference(TABLE_INFO, data, webPageInfo, target, id));\n    }\n    \n    @Override\n    @Transactional(rollbackFor = Exception.class)\n    public ResultVO<Map<String, Object>> deleteOne(String id) {\n        Map<String, Object> map = baseMapper.selectByPk(TABLE_INFO, id);\n        ResultVO result = tableService.logicDelete(TABLE_INFO, id);\n        if (result.getCode() != 0) {\n            throw new ServiceException(\"删除失败\");\n        }\n        return ResultVO.getSuccess(map);\n    }\n}"
      }, {
        "name" : "service.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Service\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;\n\nimport com.github.pagehelper.PageInfo;\nimport com.taixingyiji.base.common.ResultVO;\nimport com.taixingyiji.base.common.WebPageInfo;\n\nimport java.util.List;\nimport java.util.Map;\n \n /**\n * @author $!author\n * @version 1.0\n * @className $!{tableName}\n * @date $!time.currTime()\n * @description $!{tableInfo.comment}($!{tableInfo.name})表服务接口\n */\npublic interface $!{tableName} {\n\n    ResultVO<Map<String, Object>> add(Map<String, Object> data);\n\n    ResultVO<Map<String, Object>> update(Map<String, Object> data, Integer version);\n\n    ResultVO<Integer> updateMany(Map<String, Object> data, String ids);\n\n    ResultVO<Integer> delete(String ids);\n    \n    ResultVO<Map<String, Object>> deleteOne(String id);\n\n    ResultVO<PageInfo<Map<String, Object>>> getList(String data, WebPageInfo webPageInfo);\n\n    ResultVO<Map<String, Object>> getOne(String id);\n\n    ResultVO<List<Map<String, Object>>> getMany(String ids);\n\n    ResultVO<PageInfo<Map<String, Object>>> getReference(String data, WebPageInfo webPageInfo, String target, String id);\n}"
      }, {
        "name" : "index.vue.vm",
        "code" : "$!callback.setFileName(\"index.vue\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($tableInfo.name)\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n<template>\n  <div class=\"dashboard-editor-container\">\n    <transition name=\"el-zoom-in-bottom\">\n      <el-row v-show=\"searchVisible\">\n        <el-col :span=\"24\">\n          <el-card shadow=\"always\" class=\"select-card\">\n            <search-key-co\n              :form-key=\"tableHead\"\n              :search-data=\"searchForm\"\n              time-format=\"x\"\n              @search-submit=\"query\"\n              @reset-search-form=\"resetSearch\"\n            />\n          </el-card>\n        </el-col>\n      </el-row>\n    </transition>\n    <el-row>\n      <el-col :span=\"24\">\n        <el-card shadow=\"always\" class=\"select-card\">\n          <el-form :inline=\"true\" class=\"user-button-option\">\n            <el-button type=\"primary\" size=\"small\" @click=\"showAdd\">\n              新增\n            </el-button>\n            <el-button type=\"primary\" size=\"small\" @click=\"deleteData\">\n              批量删除\n            </el-button>\n            <el-button type=\"primary\" plain size=\"small\" @click=\"showSearch\">\n              检索<el-icon style=\"margin-left: 5px\" v-if=\"!searchVisible\"\n                ><arrow-up-bold\n              /></el-icon>\n              <el-icon style=\"margin-left: 5px\" v-else\n                ><arrow-down-bold\n              /></el-icon>\n            </el-button>\n          </el-form>\n          <table-head-co\n            ref=\"tableCo\"\n            :check-box-visible=\"true\"\n            :formatter=\"tableFormatter\"\n            :form-list=\"tableList\"\n            :table-heads=\"tableHead\"\n            :loading=\"loading\"\n            :slot-visible=\"true\"\n            :width=\"150\"\n            cell-align=\"center\"\n            @handle-sort-change=\"handleSortChange\"\n            @handle-selection-change=\"handleSelectionChange\"\n          >\n            <template v-slot=\"scope\" style=\"text-align: center\">\n              <el-button size=\"small\" @click=\"showEdit(scope.item.row)\">\n                编辑\n              </el-button>\n              <el-button size=\"small\" @click=\"showDetails(scope.item.row)\">\n                详情\n              </el-button>\n            </template>\n          </table-head-co>\n           <div style=\"text-align: center\">\n            <el-pagination\n             v-if=\"total > 10\"\n             :current-page=\"currentPage\"\n             :page-sizes=\"pageSizes\"\n             :page-size=\"pageSize\"\n             layout=\"total, sizes, prev, pager, next, jumper\"\n             :total=\"total\"\n             class=\"pagStyle\"\n             @size-change=\"handleSizePagChange\"\n             @current-change=\"handleCurrentPagChange\"\n            />\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n<script lang=\"ts\" src=\"./index.ts\"></script>\n\n<style lang=\"scss\">\n.dashboard-editor-container {\n  position: relative;\n\n  .github-corner {\n    position: absolute;\n    top: 0;\n    border: 0;\n    right: 0;\n  }\n\n  .chart-wrapper {\n    background: #fff;\n    padding: 16px 16px 0;\n    margin-bottom: 32px;\n  }\n}\n\n.chart-container {\n  position: relative;\n  width: 100%;\n  height: calc(100vh - 200px);\n}\n\n.el-select-dropdown__item {\n  font-size: 12px;\n  height: 30px;\n  line-height: 30px;\n}\n\n@media (max-width: 1024px) {\n  .chart-wrapper {\n    padding: 8px;\n  }\n}\n\n.user-query-option {\n  padding: 10px;\n  background: #fff;\n  text-align: center;\n\n  .el-form-item {\n    margin-bottom: 1px;\n  }\n}\n\n.user-button-option {\n  padding: 10px;\n}\n\n.pagStyle {\n  background: #fff;\n  text-align: center;\n  padding: 10px;\n}\n\n.custom-tree-node {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  padding-right: 8px;\n}\n</style>\n"
      }, {
        "name" : "index.ts.vm",
        "code" : "$!callback.setFileName(\"index.ts\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($tableInfo.name)\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\nimport CommonNext, { CommonNextProp } from \"/@/api/mixins/CommonNext\";\nimport { toRefs, getCurrentInstance, ref } from \"vue\";\nimport searchKeyCo from \"/@/components/CommonCo/searchKeyCo.vue\";\nimport tableHeadCo from \"/@/components/CommonCo/tableHeadCo.vue\";\nimport formCo from \"/@/components/CommonCo/formCo.vue\";\nimport { ArrowUpBold, ArrowDownBold } from \"@element-plus/icons-vue\";\n\nexport default {\n  // 引入组件\n  components: { searchKeyCo, tableHeadCo, formCo, ArrowUpBold, ArrowDownBold },\n  setup() {\n    const searchVisible = ref(false);\n\n    const showSearch = () => {\n      searchVisible.value = !searchVisible.value;\n    };\n    // 新增校验规则\n    const addRule = {};\n\n    // 编辑校验规则\n    const editRule = {};\n    //获取当前实力\n    const instance = getCurrentInstance();\n\n    // 定义props传给通用组件\n    const props: CommonNextProp = {\n      tableAlias: \"$!tool.firstLowerCase($tableInfo.name)\",\n      instance,\n      addDialogTitle: \"新增记录\",\n      editDialogTitle: \"编辑记录\",\n      detailDialogTile: \"详细信息\",\n      addRule,\n      editRule,\n      primaryKey: \"$tool.hump2Underline($pk.name)\",\n      parentRoute: \"$replace\"\n    };\n\n    // 引入通用组件api\n    const {\n      CommonObj,\n      tableFormatter,\n      handleSelectionChange,\n      cancelForm,\n      handleCurrentPagChange,\n      handleSizePagChange,\n      handleSortChange,\n      resetSearch,\n      formSubmit,\n      query,\n      deleteData,\n      showDetails,\n      showAdd,\n      showEdit\n    } = CommonNext.setup(props as never, undefined);\n\n    return {\n      ...toRefs(CommonObj),\n      query,\n      resetSearch,\n      tableFormatter,\n      handleCurrentPagChange,\n      handleSizePagChange,\n      handleSortChange,\n      handleSelectionChange,\n      showAdd,\n      cancelForm,\n      formSubmit,\n      deleteData,\n      showEdit,\n      showSearch,\n      searchVisible,\n      showDetails\n    };\n  }\n};\n"
      }, {
        "name" : "router.json.vm",
        "code" : "$!callback.setFileName(\"index.json\")\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($tableInfo.name)\"))\n  {\n      path: \"$replace/$!tool.firstLowerCase($tableInfo.name)\",\n      name: \"$!tool.firstLowerCase($tableInfo.name)\",\n      component: () => import(\"/@/views$replace/$!tool.firstLowerCase($tableInfo.name)/index.vue\"),\n      meta: {\n        title: \"message.hcUser\",\n        i18n: true,\n        showLink: true\n      },\n      children: [\n        {\n          path: \"$replace/$!tool.firstLowerCase($tableInfo.name)/add\",\n          component: () => import(\"/@/views/common/add/index.vue\"),\n          name: \"$!tool.firstLowerCase($tableInfo.name)Add\",\n          meta: {\n            title: \"\",\n            showLink: false,\n            i18n: false,\n            dynamicLevel: 3,\n            refreshRedirect: \"$replace/$!tool.firstLowerCase($tableInfo.name)\",\n            realPath: \"common/add\"\n          }\n        },\n        {\n          path: \"$replace/$!tool.firstLowerCase($tableInfo.name)/edit\",\n          component: () => import(\"/@/views/common/edit/index.vue\"),\n          name: \"$!tool.firstLowerCase($tableInfo.name)Edit\",\n          meta: {\n            title: \"\",\n            showLink: false,\n            i18n: false,\n            dynamicLevel: 3,\n            refreshRedirect: \"$replace/$!tool.firstLowerCase($tableInfo.name)\",\n            realPath: \"common/edit\"\n          }\n        },\n        {\n          path: \"$replace/$!tool.firstLowerCase($tableInfo.name)/detail\",\n          component: () => import(\"/@/views/common/detail/index.vue\"),\n          name: \"$!tool.firstLowerCase($tableInfo.name)Detail\",\n          meta: {\n            title: \"\",\n            showLink: false,\n            i18n: false,\n            dynamicLevel: 3,\n            refreshRedirect: \"$replace/$!tool.firstLowerCase($tableInfo.name)\",\n            realPath: \"common/detail\"\n          }\n        }\n      ]\n    },"
      } ]
    }
  },
  "columnConfig" : {
    "Default" : {
      "name" : "Default",
      "elementList" : [ {
        "title" : "disable",
        "type" : "BOOLEAN",
        "selectValue" : ""
      }, {
        "title" : "support",
        "type" : "SELECT",
        "selectValue" : "add,edit,query,del,ui"
      } ]
    }
  },
  "globalConfig" : {
    "Default" : {
      "name" : "Default",
      "elementList" : [ {
        "name" : "autoImport.vm",
        "value" : "##自动导入包（仅导入实体属性需要的包，通常用于实体类）\n#foreach($import in $importList)\nimport $!import;\n#end"
      }, {
        "name" : "define.vm",
        "value" : "##（Velocity宏定义）\n\n##定义设置表名后缀的宏定义，调用方式：#setTableSuffix(\"Test\")\n#macro(setTableSuffix $suffix)\n    #set($tableName = $!tool.append($tableInfo.name, $suffix))\n#end\n\n##定义设置包名后缀的宏定义，调用方式：#setPackageSuffix(\"Test\")\n#macro(setPackageSuffix $suffix)\n#if($suffix!=\"\")package #end#if($tableInfo.savePackageName!=\"\")$!{tableInfo.savePackageName}.#{end}$!suffix;\n#end\n\n##定义直接保存路径与文件名简化的宏定义，调用方式：#save(\"/entity\", \".java\")\n#macro(save $path $fileName)\n    $!callback.setSavePath($tool.append($tableInfo.savePath, $path))\n    $!callback.setFileName($tool.append($tableInfo.name, $fileName))\n#end\n\n##定义表注释的宏定义，调用方式：#tableComment(\"注释信息\")\n#macro(tableComment $desc)\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})$desc\n *\n * @author $!author\n * @since $!time.currTime()\n */\n#end\n\n##定义GET，SET方法的宏定义，调用方式：#getSetMethod($column)\n#macro(getSetMethod $column)\n\n    public $!{tool.getClsNameByFullName($column.type)} get$!{tool.firstUpperCase($column.name)}() {\n        return $!{column.name};\n    }\n\n    public void set$!{tool.firstUpperCase($column.name)}($!{tool.getClsNameByFullName($column.type)} $!{column.name}) {\n        this.$!{column.name} = $!{column.name};\n    }\n#end"
      }, {
        "name" : "init.vm",
        "value" : "##初始化区域\n\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"book_\",\"\")))\n\n##参考阿里巴巴开发手册，POJO 类中布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误\n#foreach($column in $tableInfo.fullColumn)\n#if($column.name.startsWith(\"is\") && $column.type.equals(\"java.lang.Boolean\"))\n    $!column.setName($tool.firstLowerCase($column.name.substring(2)))\n#end\n#end\n\n##实现动态排除列\n#set($temp = $tool.newHashSet(\"testCreateTime\", \"otherColumn\"))\n#foreach($item in $temp)\n    #set($newList = $tool.newArrayList())\n    #foreach($column in $tableInfo.fullColumn)\n        #if($column.name!=$item)\n            ##带有反回值的方法调用时使用$tool.call来消除返回值\n            $tool.call($newList.add($column))\n        #end\n    #end\n    ##重新保存\n    $tableInfo.setFullColumn($newList)\n#end\n\n##对importList进行篡改\n#set($temp = $tool.newHashSet())\n#foreach($column in $tableInfo.fullColumn)\n    #if(!$column.type.startsWith(\"java.lang.\"))\n        ##带有反回值的方法调用时使用$tool.call来消除返回值\n        $tool.call($temp.add($column.type))\n    #end\n#end\n##覆盖\n#set($importList = $temp)"
      }, {
        "name" : "mybatisSupport.vm",
        "value" : "##针对Mybatis 进行支持，主要用于生成xml文件\n#foreach($column in $tableInfo.fullColumn)\n    ##储存列类型\n    $tool.call($column.ext.put(\"sqlType\", $tool.getField($column.obj.dataType, \"typeName\")))\n    #if($tool.newHashSet(\"java.lang.String\").contains($column.type))\n        #set($jdbcType=\"VARCHAR\")\n    #elseif($tool.newHashSet(\"java.lang.Boolean\", \"boolean\").contains($column.type))\n        #set($jdbcType=\"BOOLEAN\")\n    #elseif($tool.newHashSet(\"java.lang.Byte\", \"byte\").contains($column.type))\n        #set($jdbcType=\"BYTE\")\n    #elseif($tool.newHashSet(\"java.lang.Integer\", \"int\", \"java.lang.Short\", \"short\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Long\", \"long\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Float\", \"float\", \"java.lang.Double\", \"double\").contains($column.type))\n        #set($jdbcType=\"NUMERIC\")\n    #elseif($tool.newHashSet(\"java.util.Date\", \"java.sql.Timestamp\", \"java.time.Instant\", \"java.time.LocalDateTime\", \"java.time.OffsetDateTime\", \"\tjava.time.ZonedDateTime\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #elseif($tool.newHashSet(\"java.sql.Date\", \"java.time.LocalDate\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #else\n        ##其他类型\n        #set($jdbcType=\"VARCHAR\")\n    #end\n    $tool.call($column.ext.put(\"jdbcType\", $jdbcType))\n#end\n\n##定义宏，查询所有列\n#macro(allSqlColumn)#foreach($column in $tableInfo.fullColumn)$column.obj.name#if($velocityHasNext), #end#end#end\n"
      } ]
    }
  }
}